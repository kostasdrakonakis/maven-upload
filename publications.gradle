apply plugin: 'maven'
apply plugin: 'digital.wup.android-maven-publish'
apply plugin: 'maven-publish'

version = libraryVersion


if (project.hasProperty("android")) {
    // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else {
    // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

// Generate javador
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// Create the pom configuration with maven-publish plugin.
def pomConfig = {
    licenses {
        license {
            name licenseName
            url licenseUrl
            distribution "repo"
        }
    }
    developers {
        developer {
            id developerId
            name developerName
            email developerEmail
        }
    }
    scm {
        url gitUrl
    }
}

// Get the artifacts
artifacts {
    archives javadocJar
    archives sourcesJar
}

// Create the publication with the pom configuration:
publishing {
    publications {
        MyPublication(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            groupId publishedGroupId
            artifactId artifact
            version libraryVersion
            from components.android
            pom.withXml {
                def root = asNode()
                NodeList packagingNodeList = root.get('packaging')
                if (!packagingNodeList.isEmpty()) {
                    def packagingNode = packagingNodeList.get(0)
                    packagingNode.setValue('aar')
                } else {
                    root.appendNode('packaging', 'aar')
                }
                root.appendNode('description', libraryDescription)
                root.appendNode('name', libraryName)
                root.appendNode('url', siteUrl)
                root.children().last() + pomConfig
            }
        }
    }
}
